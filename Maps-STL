// Method 1
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
using namespace std;


int main() {
    int q;
    cin >> q;
    
    map<string,int> clas;
    while(q--)
    {
        int type;
        cin >> type;
        string student;
        cin >> student;
        
        if(type==1)
        {
            int x;
            cin >> x;
            clas[student] += x; 
            
        }
        else if(type==2)
        {
            clas[student] = 0;
        }
        else
        {
            cout << clas[student] << endl;
        }
    }
    return 0;
}

// Method 2
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <set>
#include <map>
#include <algorithm>
using namespace std;


int main() {
 
    int q,type;
    cin>>q;
    string name;
    int marks;

    map<string,int> m;
    for(int i=0;i<q;i++)
{
     cin>>type;
    switch(type) 
    {
    case 1:
    cin>>name>>marks;

    if(m.find(name)==m.end())
    m.insert(make_pair(name,marks));
    
    else
    m[name]+=marks;
    break;

    case 2:
    cin>>name;
    m.erase(name);
    break;

    case 3:
    cin>>name;
    m.find(name) != m.end() ? cout << m.find(name)->second << endl:cout << "0" << endl;
    break;

    }

} 
return 0;
}
